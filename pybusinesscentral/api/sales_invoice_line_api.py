"""
    (v2.0) Dynamics 365 Business Central

    (v2.0) Business Central Standard APIs  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from pybusinesscentral.api_client import ApiClient, Endpoint as _Endpoint
from pybusinesscentral.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from pybusinesscentral.model.inline_response2004 import InlineResponse2004
from pybusinesscentral.model.sales_invoice_line import SalesInvoiceLine


class SalesInvoiceLineApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.delete_sales_invoice_line_for_sales_invoice_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/salesInvoices({salesInvoice_id})/salesInvoiceLines('{salesInvoiceLine_id}')',
                'operation_id': 'delete_sales_invoice_line_for_sales_invoice',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'sales_invoice_id',
                    'sales_invoice_line_id',
                ],
                'required': [
                    'company_id',
                    'sales_invoice_id',
                    'sales_invoice_line_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'sales_invoice_id':
                        (str,),
                    'sales_invoice_line_id':
                        (str,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'sales_invoice_id': 'salesInvoice_id',
                    'sales_invoice_line_id': 'salesInvoiceLine_id',
                },
                'location_map': {
                    'company_id': 'path',
                    'sales_invoice_id': 'path',
                    'sales_invoice_line_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_sales_invoice_line_for_sales_invoice_endpoint = _Endpoint(
            settings={
                'response_type': (SalesInvoiceLine,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/salesInvoices({salesInvoice_id})/salesInvoiceLines('{salesInvoiceLine_id}')',
                'operation_id': 'get_sales_invoice_line_for_sales_invoice',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'sales_invoice_id',
                    'sales_invoice_line_id',
                    'expand',
                    'select',
                ],
                'required': [
                    'company_id',
                    'sales_invoice_id',
                    'sales_invoice_line_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'expand',
                    'select',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('expand',): {

                        "ITEM": "item",
                        "ACCOUNT": "account"
                    },
                    ('select',): {

                        "ID": "id",
                        "DOCUMENTID": "documentId",
                        "SEQUENCE": "sequence",
                        "ITEMID": "itemId",
                        "ACCOUNTID": "accountId",
                        "LINETYPE": "lineType",
                        "LINEDETAILS": "lineDetails",
                        "DESCRIPTION": "description",
                        "UNITOFMEASUREID": "unitOfMeasureId",
                        "UNITOFMEASURE": "unitOfMeasure",
                        "UNITPRICE": "unitPrice",
                        "QUANTITY": "quantity",
                        "DISCOUNTAMOUNT": "discountAmount",
                        "DISCOUNTPERCENT": "discountPercent",
                        "DISCOUNTAPPLIEDBEFORETAX": "discountAppliedBeforeTax",
                        "AMOUNTEXCLUDINGTAX": "amountExcludingTax",
                        "TAXCODE": "taxCode",
                        "TAXPERCENT": "taxPercent",
                        "TOTALTAXAMOUNT": "totalTaxAmount",
                        "AMOUNTINCLUDINGTAX": "amountIncludingTax",
                        "INVOICEDISCOUNTALLOCATION": "invoiceDiscountAllocation",
                        "NETAMOUNT": "netAmount",
                        "NETTAXAMOUNT": "netTaxAmount",
                        "NETAMOUNTINCLUDINGTAX": "netAmountIncludingTax",
                        "SHIPMENTDATE": "shipmentDate"
                    },
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'sales_invoice_id':
                        (str,),
                    'sales_invoice_line_id':
                        (str,),
                    'expand':
                        ([str],),
                    'select':
                        ([str],),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'sales_invoice_id': 'salesInvoice_id',
                    'sales_invoice_line_id': 'salesInvoiceLine_id',
                    'expand': '$expand',
                    'select': '$select',
                },
                'location_map': {
                    'company_id': 'path',
                    'sales_invoice_id': 'path',
                    'sales_invoice_line_id': 'path',
                    'expand': 'query',
                    'select': 'query',
                },
                'collection_format_map': {
                    'expand': 'csv',
                    'select': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.list_sales_invoice_lines_endpoint = _Endpoint(
            settings={
                'response_type': (InlineResponse2004,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/salesInvoiceLines',
                'operation_id': 'list_sales_invoice_lines',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'top',
                    'skip',
                    'limit',
                    'filter',
                    'expand',
                    'select',
                ],
                'required': [
                    'company_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'expand',
                    'select',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('expand',): {

                        "ITEM": "item",
                        "ACCOUNT": "account"
                    },
                    ('select',): {

                        "ID": "id",
                        "DOCUMENTID": "documentId",
                        "SEQUENCE": "sequence",
                        "ITEMID": "itemId",
                        "ACCOUNTID": "accountId",
                        "LINETYPE": "lineType",
                        "LINEDETAILS": "lineDetails",
                        "DESCRIPTION": "description",
                        "UNITOFMEASUREID": "unitOfMeasureId",
                        "UNITOFMEASURE": "unitOfMeasure",
                        "UNITPRICE": "unitPrice",
                        "QUANTITY": "quantity",
                        "DISCOUNTAMOUNT": "discountAmount",
                        "DISCOUNTPERCENT": "discountPercent",
                        "DISCOUNTAPPLIEDBEFORETAX": "discountAppliedBeforeTax",
                        "AMOUNTEXCLUDINGTAX": "amountExcludingTax",
                        "TAXCODE": "taxCode",
                        "TAXPERCENT": "taxPercent",
                        "TOTALTAXAMOUNT": "totalTaxAmount",
                        "AMOUNTINCLUDINGTAX": "amountIncludingTax",
                        "INVOICEDISCOUNTALLOCATION": "invoiceDiscountAllocation",
                        "NETAMOUNT": "netAmount",
                        "NETTAXAMOUNT": "netTaxAmount",
                        "NETAMOUNTINCLUDINGTAX": "netAmountIncludingTax",
                        "SHIPMENTDATE": "shipmentDate"
                    },
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'top':
                        (int,),
                    'skip':
                        (int,),
                    'limit':
                        (int,),
                    'filter':
                        (str,),
                    'expand':
                        ([str],),
                    'select':
                        ([str],),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'top': '$top',
                    'skip': '$skip',
                    'limit': '$limit',
                    'filter': '$filter',
                    'expand': '$expand',
                    'select': '$select',
                },
                'location_map': {
                    'company_id': 'path',
                    'top': 'query',
                    'skip': 'query',
                    'limit': 'query',
                    'filter': 'query',
                    'expand': 'query',
                    'select': 'query',
                },
                'collection_format_map': {
                    'expand': 'csv',
                    'select': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.list_sales_invoice_lines_for_sales_invoice_endpoint = _Endpoint(
            settings={
                'response_type': (InlineResponse2004,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/salesInvoices({salesInvoice_id})/salesInvoiceLines',
                'operation_id': 'list_sales_invoice_lines_for_sales_invoice',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'sales_invoice_id',
                    'top',
                    'skip',
                    'limit',
                    'filter',
                    'expand',
                    'select',
                ],
                'required': [
                    'company_id',
                    'sales_invoice_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'expand',
                    'select',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('expand',): {

                        "ITEM": "item",
                        "ACCOUNT": "account"
                    },
                    ('select',): {

                        "ID": "id",
                        "DOCUMENTID": "documentId",
                        "SEQUENCE": "sequence",
                        "ITEMID": "itemId",
                        "ACCOUNTID": "accountId",
                        "LINETYPE": "lineType",
                        "LINEDETAILS": "lineDetails",
                        "DESCRIPTION": "description",
                        "UNITOFMEASUREID": "unitOfMeasureId",
                        "UNITOFMEASURE": "unitOfMeasure",
                        "UNITPRICE": "unitPrice",
                        "QUANTITY": "quantity",
                        "DISCOUNTAMOUNT": "discountAmount",
                        "DISCOUNTPERCENT": "discountPercent",
                        "DISCOUNTAPPLIEDBEFORETAX": "discountAppliedBeforeTax",
                        "AMOUNTEXCLUDINGTAX": "amountExcludingTax",
                        "TAXCODE": "taxCode",
                        "TAXPERCENT": "taxPercent",
                        "TOTALTAXAMOUNT": "totalTaxAmount",
                        "AMOUNTINCLUDINGTAX": "amountIncludingTax",
                        "INVOICEDISCOUNTALLOCATION": "invoiceDiscountAllocation",
                        "NETAMOUNT": "netAmount",
                        "NETTAXAMOUNT": "netTaxAmount",
                        "NETAMOUNTINCLUDINGTAX": "netAmountIncludingTax",
                        "SHIPMENTDATE": "shipmentDate"
                    },
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'sales_invoice_id':
                        (str,),
                    'top':
                        (int,),
                    'skip':
                        (int,),
                    'limit':
                        (int,),
                    'filter':
                        (str,),
                    'expand':
                        ([str],),
                    'select':
                        ([str],),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'sales_invoice_id': 'salesInvoice_id',
                    'top': '$top',
                    'skip': '$skip',
                    'limit': '$limit',
                    'filter': '$filter',
                    'expand': '$expand',
                    'select': '$select',
                },
                'location_map': {
                    'company_id': 'path',
                    'sales_invoice_id': 'path',
                    'top': 'query',
                    'skip': 'query',
                    'limit': 'query',
                    'filter': 'query',
                    'expand': 'query',
                    'select': 'query',
                },
                'collection_format_map': {
                    'expand': 'csv',
                    'select': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.patch_sales_invoice_line_for_sales_invoice_endpoint = _Endpoint(
            settings={
                'response_type': (SalesInvoiceLine,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/salesInvoices({salesInvoice_id})/salesInvoiceLines('{salesInvoiceLine_id}')',
                'operation_id': 'patch_sales_invoice_line_for_sales_invoice',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'sales_invoice_id',
                    'sales_invoice_line_id',
                    'content_type',
                    'if_match',
                    'sales_invoice_line',
                ],
                'required': [
                    'company_id',
                    'sales_invoice_id',
                    'sales_invoice_line_id',
                    'content_type',
                    'if_match',
                    'sales_invoice_line',
                ],
                'nullable': [
                    'sales_invoice_line',
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'sales_invoice_id':
                        (str,),
                    'sales_invoice_line_id':
                        (str,),
                    'content_type':
                        (str,),
                    'if_match':
                        (str,),
                    'sales_invoice_line':
                        (SalesInvoiceLine,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'sales_invoice_id': 'salesInvoice_id',
                    'sales_invoice_line_id': 'salesInvoiceLine_id',
                    'content_type': 'Content-Type',
                    'if_match': 'If-Match',
                },
                'location_map': {
                    'company_id': 'path',
                    'sales_invoice_id': 'path',
                    'sales_invoice_line_id': 'path',
                    'content_type': 'header',
                    'if_match': 'header',
                    'sales_invoice_line': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.post_sales_invoice_line_endpoint = _Endpoint(
            settings={
                'response_type': (SalesInvoiceLine,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/salesInvoiceLines',
                'operation_id': 'post_sales_invoice_line',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'content_type',
                    'sales_invoice_line',
                ],
                'required': [
                    'company_id',
                    'content_type',
                    'sales_invoice_line',
                ],
                'nullable': [
                    'sales_invoice_line',
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'content_type':
                        (str,),
                    'sales_invoice_line':
                        (SalesInvoiceLine,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'content_type': 'Content-Type',
                },
                'location_map': {
                    'company_id': 'path',
                    'content_type': 'header',
                    'sales_invoice_line': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.post_sales_invoice_line_for_sales_invoice_endpoint = _Endpoint(
            settings={
                'response_type': (SalesInvoiceLine,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/salesInvoices({salesInvoice_id})/salesInvoiceLines',
                'operation_id': 'post_sales_invoice_line_for_sales_invoice',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'sales_invoice_id',
                    'content_type',
                    'sales_invoice_line',
                ],
                'required': [
                    'company_id',
                    'sales_invoice_id',
                    'content_type',
                    'sales_invoice_line',
                ],
                'nullable': [
                    'sales_invoice_line',
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'sales_invoice_id':
                        (str,),
                    'content_type':
                        (str,),
                    'sales_invoice_line':
                        (SalesInvoiceLine,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'sales_invoice_id': 'salesInvoice_id',
                    'content_type': 'Content-Type',
                },
                'location_map': {
                    'company_id': 'path',
                    'sales_invoice_id': 'path',
                    'content_type': 'header',
                    'sales_invoice_line': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def delete_sales_invoice_line_for_sales_invoice(
        self,
        company_id,
        sales_invoice_id,
        sales_invoice_line_id,
        **kwargs
    ):
        """Deletes an object of type salesInvoiceLine in Dynamics 365 Business Central  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.delete_sales_invoice_line_for_sales_invoice(company_id, sales_invoice_id, sales_invoice_line_id, async_req=True)
        >>> result = thread.get()

        Args:
            company_id (str): (v1.0) id for company
            sales_invoice_id (str): (v1.0) id for salesInvoice
            sales_invoice_line_id (str): (v1.0) id for salesInvoiceLine

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['company_id'] = \
            company_id
        kwargs['sales_invoice_id'] = \
            sales_invoice_id
        kwargs['sales_invoice_line_id'] = \
            sales_invoice_line_id
        return self.delete_sales_invoice_line_for_sales_invoice_endpoint.call_with_http_info(**kwargs)

    def get_sales_invoice_line_for_sales_invoice(
        self,
        company_id,
        sales_invoice_id,
        sales_invoice_line_id,
        **kwargs
    ):
        """Retrieve the properties and relationships of an object of type salesInvoiceLine for Dynamics 365 Business Central.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_sales_invoice_line_for_sales_invoice(company_id, sales_invoice_id, sales_invoice_line_id, async_req=True)
        >>> result = thread.get()

        Args:
            company_id (str): (v1.0) id for company
            sales_invoice_id (str): (v1.0) id for salesInvoice
            sales_invoice_line_id (str): (v1.0) id for salesInvoiceLine

        Keyword Args:
            expand ([str]): (v1.0) Entities to expand. [optional]
            select ([str]): (v1.0) Selected properties to be retrieved. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            SalesInvoiceLine
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['company_id'] = \
            company_id
        kwargs['sales_invoice_id'] = \
            sales_invoice_id
        kwargs['sales_invoice_line_id'] = \
            sales_invoice_line_id
        return self.get_sales_invoice_line_for_sales_invoice_endpoint.call_with_http_info(**kwargs)

    def list_sales_invoice_lines(
        self,
        company_id,
        **kwargs
    ):
        """Returns a list of salesInvoiceLines  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.list_sales_invoice_lines(company_id, async_req=True)
        >>> result = thread.get()

        Args:
            company_id (str): (v1.0) id for company

        Keyword Args:
            top (int): (v1.0) Number of items to return from the top of the list. [optional]
            skip (int): (v1.0) Number of items to skip from the list. [optional]
            limit (int): (v1.0) Number of items to return from the list. [optional]
            filter (str): (v1.0) Filtering expression. [optional]
            expand ([str]): (v1.0) Entities to expand. [optional]
            select ([str]): (v1.0) Selected properties to be retrieved. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            InlineResponse2004
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['company_id'] = \
            company_id
        return self.list_sales_invoice_lines_endpoint.call_with_http_info(**kwargs)

    def list_sales_invoice_lines_for_sales_invoice(
        self,
        company_id,
        sales_invoice_id,
        **kwargs
    ):
        """Returns a list of salesInvoiceLines  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.list_sales_invoice_lines_for_sales_invoice(company_id, sales_invoice_id, async_req=True)
        >>> result = thread.get()

        Args:
            company_id (str): (v1.0) id for company
            sales_invoice_id (str): (v1.0) id for salesInvoice

        Keyword Args:
            top (int): (v1.0) Number of items to return from the top of the list. [optional]
            skip (int): (v1.0) Number of items to skip from the list. [optional]
            limit (int): (v1.0) Number of items to return from the list. [optional]
            filter (str): (v1.0) Filtering expression. [optional]
            expand ([str]): (v1.0) Entities to expand. [optional]
            select ([str]): (v1.0) Selected properties to be retrieved. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            InlineResponse2004
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['company_id'] = \
            company_id
        kwargs['sales_invoice_id'] = \
            sales_invoice_id
        return self.list_sales_invoice_lines_for_sales_invoice_endpoint.call_with_http_info(**kwargs)

    def patch_sales_invoice_line_for_sales_invoice(
        self,
        company_id,
        sales_invoice_id,
        sales_invoice_line_id,
        content_type,
        if_match,
        sales_invoice_line,
        **kwargs
    ):
        """Updates an object of type salesInvoiceLine in Dynamics 365 Business Central  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.patch_sales_invoice_line_for_sales_invoice(company_id, sales_invoice_id, sales_invoice_line_id, content_type, if_match, sales_invoice_line, async_req=True)
        >>> result = thread.get()

        Args:
            company_id (str): (v1.0) id for company
            sales_invoice_id (str): (v1.0) id for salesInvoice
            sales_invoice_line_id (str): (v1.0) id for salesInvoiceLine
            content_type (str): (v1.0) application/json
            if_match (str): (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
            sales_invoice_line (SalesInvoiceLine):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            SalesInvoiceLine
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['company_id'] = \
            company_id
        kwargs['sales_invoice_id'] = \
            sales_invoice_id
        kwargs['sales_invoice_line_id'] = \
            sales_invoice_line_id
        kwargs['content_type'] = \
            content_type
        kwargs['if_match'] = \
            if_match
        kwargs['sales_invoice_line'] = \
            sales_invoice_line
        return self.patch_sales_invoice_line_for_sales_invoice_endpoint.call_with_http_info(**kwargs)

    def post_sales_invoice_line(
        self,
        company_id,
        content_type,
        sales_invoice_line,
        **kwargs
    ):
        """Creates an object of type salesInvoiceLine in Dynamics 365 Business Central  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.post_sales_invoice_line(company_id, content_type, sales_invoice_line, async_req=True)
        >>> result = thread.get()

        Args:
            company_id (str): (v1.0) id for company
            content_type (str): (v1.0) application/json
            sales_invoice_line (SalesInvoiceLine):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            SalesInvoiceLine
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['company_id'] = \
            company_id
        kwargs['content_type'] = \
            content_type
        kwargs['sales_invoice_line'] = \
            sales_invoice_line
        return self.post_sales_invoice_line_endpoint.call_with_http_info(**kwargs)

    def post_sales_invoice_line_for_sales_invoice(
        self,
        company_id,
        sales_invoice_id,
        content_type,
        sales_invoice_line,
        **kwargs
    ):
        """Creates an object of type salesInvoiceLine in Dynamics 365 Business Central  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.post_sales_invoice_line_for_sales_invoice(company_id, sales_invoice_id, content_type, sales_invoice_line, async_req=True)
        >>> result = thread.get()

        Args:
            company_id (str): (v1.0) id for company
            sales_invoice_id (str): (v1.0) id for salesInvoice
            content_type (str): (v1.0) application/json
            sales_invoice_line (SalesInvoiceLine):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            SalesInvoiceLine
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['company_id'] = \
            company_id
        kwargs['sales_invoice_id'] = \
            sales_invoice_id
        kwargs['content_type'] = \
            content_type
        kwargs['sales_invoice_line'] = \
            sales_invoice_line
        return self.post_sales_invoice_line_for_sales_invoice_endpoint.call_with_http_info(**kwargs)

