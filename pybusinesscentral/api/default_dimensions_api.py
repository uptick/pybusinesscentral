"""
    (v1.0) Dynamics 365 Business Central

    (v1.0) Business Central Standard APIs  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from pybusinesscentral.api_client import ApiClient, Endpoint as _Endpoint
from pybusinesscentral.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from pybusinesscentral.model.default_dimensions import DefaultDimensions
from pybusinesscentral.model.inline_response2003 import InlineResponse2003


class DefaultDimensionsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        def __delete_default_dimensions(
            self,
            company_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            **kwargs
        ):
            """Deletes an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.delete_default_dimensions(company_id, default_dimensions_parent_id, default_dimensions_dimension_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                None
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            return self.call_with_http_info(**kwargs)

        self.delete_default_dimensions = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'delete_default_dimensions',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'required': [
                    'company_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                },
                'location_map': {
                    'company_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [],
                'content_type': [],
            },
            api_client=api_client,
            callable=__delete_default_dimensions
        )

        def __delete_default_dimensions_for_customer(
            self,
            company_id,
            customer_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            **kwargs
        ):
            """Deletes an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.delete_default_dimensions_for_customer(company_id, customer_id, default_dimensions_parent_id, default_dimensions_dimension_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                customer_id (str): (v1.0) id for customer
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                None
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['customer_id'] = \
                customer_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            return self.call_with_http_info(**kwargs)

        self.delete_default_dimensions_for_customer = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/customers({customer_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'delete_default_dimensions_for_customer',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'customer_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'required': [
                    'company_id',
                    'customer_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'customer_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'customer_id': 'customer_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                },
                'location_map': {
                    'company_id': 'path',
                    'customer_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [],
                'content_type': [],
            },
            api_client=api_client,
            callable=__delete_default_dimensions_for_customer
        )

        def __delete_default_dimensions_for_employee(
            self,
            company_id,
            employee_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            **kwargs
        ):
            """Deletes an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.delete_default_dimensions_for_employee(company_id, employee_id, default_dimensions_parent_id, default_dimensions_dimension_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                employee_id (str): (v1.0) id for employee
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                None
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['employee_id'] = \
                employee_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            return self.call_with_http_info(**kwargs)

        self.delete_default_dimensions_for_employee = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/employees({employee_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'delete_default_dimensions_for_employee',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'employee_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'required': [
                    'company_id',
                    'employee_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'employee_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'employee_id': 'employee_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                },
                'location_map': {
                    'company_id': 'path',
                    'employee_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [],
                'content_type': [],
            },
            api_client=api_client,
            callable=__delete_default_dimensions_for_employee
        )

        def __delete_default_dimensions_for_item(
            self,
            company_id,
            item_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            **kwargs
        ):
            """Deletes an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.delete_default_dimensions_for_item(company_id, item_id, default_dimensions_parent_id, default_dimensions_dimension_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                item_id (str): (v1.0) id for item
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                None
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['item_id'] = \
                item_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            return self.call_with_http_info(**kwargs)

        self.delete_default_dimensions_for_item = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/items({item_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'delete_default_dimensions_for_item',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'item_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'required': [
                    'company_id',
                    'item_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'item_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'item_id': 'item_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                },
                'location_map': {
                    'company_id': 'path',
                    'item_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [],
                'content_type': [],
            },
            api_client=api_client,
            callable=__delete_default_dimensions_for_item
        )

        def __delete_default_dimensions_for_vendor(
            self,
            company_id,
            vendor_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            **kwargs
        ):
            """Deletes an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.delete_default_dimensions_for_vendor(company_id, vendor_id, default_dimensions_parent_id, default_dimensions_dimension_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                vendor_id (str): (v1.0) id for vendor
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                None
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['vendor_id'] = \
                vendor_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            return self.call_with_http_info(**kwargs)

        self.delete_default_dimensions_for_vendor = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/vendors({vendor_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'delete_default_dimensions_for_vendor',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'vendor_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'required': [
                    'company_id',
                    'vendor_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'vendor_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'vendor_id': 'vendor_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                },
                'location_map': {
                    'company_id': 'path',
                    'vendor_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [],
                'content_type': [],
            },
            api_client=api_client,
            callable=__delete_default_dimensions_for_vendor
        )

        def __get_default_dimensions(
            self,
            company_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            **kwargs
        ):
            """Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_default_dimensions(company_id, default_dimensions_parent_id, default_dimensions_dimension_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions

            Keyword Args:
                expand ([str]): (v1.0) Entities to expand. [optional]
                select ([str]): (v1.0) Selected properties to be retrieved. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            return self.call_with_http_info(**kwargs)

        self.get_default_dimensions = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'get_default_dimensions',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'expand',
                    'select',
                ],
                'required': [
                    'company_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'expand',
                    'select',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('expand',): {

                        "ACCOUNT": "account",
                        "DIMENSION": "dimension",
                        "DIMENSIONVALUE": "dimensionValue"
                    },
                    ('select',): {

                        "PARENTID": "parentId",
                        "DIMENSIONID": "dimensionId",
                        "DIMENSIONCODE": "dimensionCode",
                        "DIMENSIONVALUEID": "dimensionValueId",
                        "DIMENSIONVALUECODE": "dimensionValueCode",
                        "POSTINGVALIDATION": "postingValidation"
                    },
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                    'expand':
                        ([str],),
                    'select':
                        ([str],),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                    'expand': '$expand',
                    'select': '$select',
                },
                'location_map': {
                    'company_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                    'expand': 'query',
                    'select': 'query',
                },
                'collection_format_map': {
                    'expand': 'csv',
                    'select': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__get_default_dimensions
        )

        def __get_default_dimensions_for_customer(
            self,
            company_id,
            customer_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            **kwargs
        ):
            """Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_default_dimensions_for_customer(company_id, customer_id, default_dimensions_parent_id, default_dimensions_dimension_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                customer_id (str): (v1.0) id for customer
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions

            Keyword Args:
                expand ([str]): (v1.0) Entities to expand. [optional]
                select ([str]): (v1.0) Selected properties to be retrieved. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['customer_id'] = \
                customer_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            return self.call_with_http_info(**kwargs)

        self.get_default_dimensions_for_customer = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/customers({customer_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'get_default_dimensions_for_customer',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'customer_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'expand',
                    'select',
                ],
                'required': [
                    'company_id',
                    'customer_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'expand',
                    'select',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('expand',): {

                        "ACCOUNT": "account",
                        "DIMENSION": "dimension",
                        "DIMENSIONVALUE": "dimensionValue"
                    },
                    ('select',): {

                        "PARENTID": "parentId",
                        "DIMENSIONID": "dimensionId",
                        "DIMENSIONCODE": "dimensionCode",
                        "DIMENSIONVALUEID": "dimensionValueId",
                        "DIMENSIONVALUECODE": "dimensionValueCode",
                        "POSTINGVALIDATION": "postingValidation"
                    },
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'customer_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                    'expand':
                        ([str],),
                    'select':
                        ([str],),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'customer_id': 'customer_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                    'expand': '$expand',
                    'select': '$select',
                },
                'location_map': {
                    'company_id': 'path',
                    'customer_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                    'expand': 'query',
                    'select': 'query',
                },
                'collection_format_map': {
                    'expand': 'csv',
                    'select': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__get_default_dimensions_for_customer
        )

        def __get_default_dimensions_for_employee(
            self,
            company_id,
            employee_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            **kwargs
        ):
            """Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_default_dimensions_for_employee(company_id, employee_id, default_dimensions_parent_id, default_dimensions_dimension_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                employee_id (str): (v1.0) id for employee
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions

            Keyword Args:
                expand ([str]): (v1.0) Entities to expand. [optional]
                select ([str]): (v1.0) Selected properties to be retrieved. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['employee_id'] = \
                employee_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            return self.call_with_http_info(**kwargs)

        self.get_default_dimensions_for_employee = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/employees({employee_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'get_default_dimensions_for_employee',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'employee_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'expand',
                    'select',
                ],
                'required': [
                    'company_id',
                    'employee_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'expand',
                    'select',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('expand',): {

                        "ACCOUNT": "account",
                        "DIMENSION": "dimension",
                        "DIMENSIONVALUE": "dimensionValue"
                    },
                    ('select',): {

                        "PARENTID": "parentId",
                        "DIMENSIONID": "dimensionId",
                        "DIMENSIONCODE": "dimensionCode",
                        "DIMENSIONVALUEID": "dimensionValueId",
                        "DIMENSIONVALUECODE": "dimensionValueCode",
                        "POSTINGVALIDATION": "postingValidation"
                    },
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'employee_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                    'expand':
                        ([str],),
                    'select':
                        ([str],),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'employee_id': 'employee_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                    'expand': '$expand',
                    'select': '$select',
                },
                'location_map': {
                    'company_id': 'path',
                    'employee_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                    'expand': 'query',
                    'select': 'query',
                },
                'collection_format_map': {
                    'expand': 'csv',
                    'select': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__get_default_dimensions_for_employee
        )

        def __get_default_dimensions_for_item(
            self,
            company_id,
            item_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            **kwargs
        ):
            """Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_default_dimensions_for_item(company_id, item_id, default_dimensions_parent_id, default_dimensions_dimension_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                item_id (str): (v1.0) id for item
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions

            Keyword Args:
                expand ([str]): (v1.0) Entities to expand. [optional]
                select ([str]): (v1.0) Selected properties to be retrieved. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['item_id'] = \
                item_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            return self.call_with_http_info(**kwargs)

        self.get_default_dimensions_for_item = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/items({item_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'get_default_dimensions_for_item',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'item_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'expand',
                    'select',
                ],
                'required': [
                    'company_id',
                    'item_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'expand',
                    'select',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('expand',): {

                        "ACCOUNT": "account",
                        "DIMENSION": "dimension",
                        "DIMENSIONVALUE": "dimensionValue"
                    },
                    ('select',): {

                        "PARENTID": "parentId",
                        "DIMENSIONID": "dimensionId",
                        "DIMENSIONCODE": "dimensionCode",
                        "DIMENSIONVALUEID": "dimensionValueId",
                        "DIMENSIONVALUECODE": "dimensionValueCode",
                        "POSTINGVALIDATION": "postingValidation"
                    },
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'item_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                    'expand':
                        ([str],),
                    'select':
                        ([str],),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'item_id': 'item_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                    'expand': '$expand',
                    'select': '$select',
                },
                'location_map': {
                    'company_id': 'path',
                    'item_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                    'expand': 'query',
                    'select': 'query',
                },
                'collection_format_map': {
                    'expand': 'csv',
                    'select': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__get_default_dimensions_for_item
        )

        def __get_default_dimensions_for_vendor(
            self,
            company_id,
            vendor_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            **kwargs
        ):
            """Retrieve the properties and relationships of an object of type defaultDimensions for Dynamics 365 Business Central.  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_default_dimensions_for_vendor(company_id, vendor_id, default_dimensions_parent_id, default_dimensions_dimension_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                vendor_id (str): (v1.0) id for vendor
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions

            Keyword Args:
                expand ([str]): (v1.0) Entities to expand. [optional]
                select ([str]): (v1.0) Selected properties to be retrieved. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['vendor_id'] = \
                vendor_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            return self.call_with_http_info(**kwargs)

        self.get_default_dimensions_for_vendor = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/vendors({vendor_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'get_default_dimensions_for_vendor',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'vendor_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'expand',
                    'select',
                ],
                'required': [
                    'company_id',
                    'vendor_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'expand',
                    'select',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('expand',): {

                        "ACCOUNT": "account",
                        "DIMENSION": "dimension",
                        "DIMENSIONVALUE": "dimensionValue"
                    },
                    ('select',): {

                        "PARENTID": "parentId",
                        "DIMENSIONID": "dimensionId",
                        "DIMENSIONCODE": "dimensionCode",
                        "DIMENSIONVALUEID": "dimensionValueId",
                        "DIMENSIONVALUECODE": "dimensionValueCode",
                        "POSTINGVALIDATION": "postingValidation"
                    },
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'vendor_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                    'expand':
                        ([str],),
                    'select':
                        ([str],),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'vendor_id': 'vendor_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                    'expand': '$expand',
                    'select': '$select',
                },
                'location_map': {
                    'company_id': 'path',
                    'vendor_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                    'expand': 'query',
                    'select': 'query',
                },
                'collection_format_map': {
                    'expand': 'csv',
                    'select': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__get_default_dimensions_for_vendor
        )

        def __list_default_dimensions(
            self,
            company_id,
            **kwargs
        ):
            """Returns a list of defaultDimensions  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.list_default_dimensions(company_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company

            Keyword Args:
                top (int): (v1.0) Number of items to return from the top of the list. [optional]
                skip (int): (v1.0) Number of items to skip from the list. [optional]
                limit (int): (v1.0) Number of items to return from the list. [optional]
                filter (str): (v1.0) Filtering expression. [optional]
                expand ([str]): (v1.0) Entities to expand. [optional]
                select ([str]): (v1.0) Selected properties to be retrieved. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                InlineResponse2003
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            return self.call_with_http_info(**kwargs)

        self.list_default_dimensions = _Endpoint(
            settings={
                'response_type': (InlineResponse2003,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/defaultDimensions',
                'operation_id': 'list_default_dimensions',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'top',
                    'skip',
                    'limit',
                    'filter',
                    'expand',
                    'select',
                ],
                'required': [
                    'company_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'expand',
                    'select',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('expand',): {

                        "ACCOUNT": "account",
                        "DIMENSION": "dimension",
                        "DIMENSIONVALUE": "dimensionValue"
                    },
                    ('select',): {

                        "PARENTID": "parentId",
                        "DIMENSIONID": "dimensionId",
                        "DIMENSIONCODE": "dimensionCode",
                        "DIMENSIONVALUEID": "dimensionValueId",
                        "DIMENSIONVALUECODE": "dimensionValueCode",
                        "POSTINGVALIDATION": "postingValidation"
                    },
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'top':
                        (int,),
                    'skip':
                        (int,),
                    'limit':
                        (int,),
                    'filter':
                        (str,),
                    'expand':
                        ([str],),
                    'select':
                        ([str],),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'top': '$top',
                    'skip': '$skip',
                    'limit': '$limit',
                    'filter': '$filter',
                    'expand': '$expand',
                    'select': '$select',
                },
                'location_map': {
                    'company_id': 'path',
                    'top': 'query',
                    'skip': 'query',
                    'limit': 'query',
                    'filter': 'query',
                    'expand': 'query',
                    'select': 'query',
                },
                'collection_format_map': {
                    'expand': 'csv',
                    'select': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__list_default_dimensions
        )

        def __list_default_dimensions_for_customer(
            self,
            company_id,
            customer_id,
            **kwargs
        ):
            """Returns a list of defaultDimensions  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.list_default_dimensions_for_customer(company_id, customer_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                customer_id (str): (v1.0) id for customer

            Keyword Args:
                top (int): (v1.0) Number of items to return from the top of the list. [optional]
                skip (int): (v1.0) Number of items to skip from the list. [optional]
                limit (int): (v1.0) Number of items to return from the list. [optional]
                filter (str): (v1.0) Filtering expression. [optional]
                expand ([str]): (v1.0) Entities to expand. [optional]
                select ([str]): (v1.0) Selected properties to be retrieved. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                InlineResponse2003
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['customer_id'] = \
                customer_id
            return self.call_with_http_info(**kwargs)

        self.list_default_dimensions_for_customer = _Endpoint(
            settings={
                'response_type': (InlineResponse2003,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/customers({customer_id})/defaultDimensions',
                'operation_id': 'list_default_dimensions_for_customer',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'customer_id',
                    'top',
                    'skip',
                    'limit',
                    'filter',
                    'expand',
                    'select',
                ],
                'required': [
                    'company_id',
                    'customer_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'expand',
                    'select',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('expand',): {

                        "ACCOUNT": "account",
                        "DIMENSION": "dimension",
                        "DIMENSIONVALUE": "dimensionValue"
                    },
                    ('select',): {

                        "PARENTID": "parentId",
                        "DIMENSIONID": "dimensionId",
                        "DIMENSIONCODE": "dimensionCode",
                        "DIMENSIONVALUEID": "dimensionValueId",
                        "DIMENSIONVALUECODE": "dimensionValueCode",
                        "POSTINGVALIDATION": "postingValidation"
                    },
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'customer_id':
                        (str,),
                    'top':
                        (int,),
                    'skip':
                        (int,),
                    'limit':
                        (int,),
                    'filter':
                        (str,),
                    'expand':
                        ([str],),
                    'select':
                        ([str],),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'customer_id': 'customer_id',
                    'top': '$top',
                    'skip': '$skip',
                    'limit': '$limit',
                    'filter': '$filter',
                    'expand': '$expand',
                    'select': '$select',
                },
                'location_map': {
                    'company_id': 'path',
                    'customer_id': 'path',
                    'top': 'query',
                    'skip': 'query',
                    'limit': 'query',
                    'filter': 'query',
                    'expand': 'query',
                    'select': 'query',
                },
                'collection_format_map': {
                    'expand': 'csv',
                    'select': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__list_default_dimensions_for_customer
        )

        def __list_default_dimensions_for_employee(
            self,
            company_id,
            employee_id,
            **kwargs
        ):
            """Returns a list of defaultDimensions  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.list_default_dimensions_for_employee(company_id, employee_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                employee_id (str): (v1.0) id for employee

            Keyword Args:
                top (int): (v1.0) Number of items to return from the top of the list. [optional]
                skip (int): (v1.0) Number of items to skip from the list. [optional]
                limit (int): (v1.0) Number of items to return from the list. [optional]
                filter (str): (v1.0) Filtering expression. [optional]
                expand ([str]): (v1.0) Entities to expand. [optional]
                select ([str]): (v1.0) Selected properties to be retrieved. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                InlineResponse2003
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['employee_id'] = \
                employee_id
            return self.call_with_http_info(**kwargs)

        self.list_default_dimensions_for_employee = _Endpoint(
            settings={
                'response_type': (InlineResponse2003,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/employees({employee_id})/defaultDimensions',
                'operation_id': 'list_default_dimensions_for_employee',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'employee_id',
                    'top',
                    'skip',
                    'limit',
                    'filter',
                    'expand',
                    'select',
                ],
                'required': [
                    'company_id',
                    'employee_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'expand',
                    'select',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('expand',): {

                        "ACCOUNT": "account",
                        "DIMENSION": "dimension",
                        "DIMENSIONVALUE": "dimensionValue"
                    },
                    ('select',): {

                        "PARENTID": "parentId",
                        "DIMENSIONID": "dimensionId",
                        "DIMENSIONCODE": "dimensionCode",
                        "DIMENSIONVALUEID": "dimensionValueId",
                        "DIMENSIONVALUECODE": "dimensionValueCode",
                        "POSTINGVALIDATION": "postingValidation"
                    },
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'employee_id':
                        (str,),
                    'top':
                        (int,),
                    'skip':
                        (int,),
                    'limit':
                        (int,),
                    'filter':
                        (str,),
                    'expand':
                        ([str],),
                    'select':
                        ([str],),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'employee_id': 'employee_id',
                    'top': '$top',
                    'skip': '$skip',
                    'limit': '$limit',
                    'filter': '$filter',
                    'expand': '$expand',
                    'select': '$select',
                },
                'location_map': {
                    'company_id': 'path',
                    'employee_id': 'path',
                    'top': 'query',
                    'skip': 'query',
                    'limit': 'query',
                    'filter': 'query',
                    'expand': 'query',
                    'select': 'query',
                },
                'collection_format_map': {
                    'expand': 'csv',
                    'select': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__list_default_dimensions_for_employee
        )

        def __list_default_dimensions_for_item(
            self,
            company_id,
            item_id,
            **kwargs
        ):
            """Returns a list of defaultDimensions  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.list_default_dimensions_for_item(company_id, item_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                item_id (str): (v1.0) id for item

            Keyword Args:
                top (int): (v1.0) Number of items to return from the top of the list. [optional]
                skip (int): (v1.0) Number of items to skip from the list. [optional]
                limit (int): (v1.0) Number of items to return from the list. [optional]
                filter (str): (v1.0) Filtering expression. [optional]
                expand ([str]): (v1.0) Entities to expand. [optional]
                select ([str]): (v1.0) Selected properties to be retrieved. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                InlineResponse2003
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['item_id'] = \
                item_id
            return self.call_with_http_info(**kwargs)

        self.list_default_dimensions_for_item = _Endpoint(
            settings={
                'response_type': (InlineResponse2003,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/items({item_id})/defaultDimensions',
                'operation_id': 'list_default_dimensions_for_item',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'item_id',
                    'top',
                    'skip',
                    'limit',
                    'filter',
                    'expand',
                    'select',
                ],
                'required': [
                    'company_id',
                    'item_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'expand',
                    'select',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('expand',): {

                        "ACCOUNT": "account",
                        "DIMENSION": "dimension",
                        "DIMENSIONVALUE": "dimensionValue"
                    },
                    ('select',): {

                        "PARENTID": "parentId",
                        "DIMENSIONID": "dimensionId",
                        "DIMENSIONCODE": "dimensionCode",
                        "DIMENSIONVALUEID": "dimensionValueId",
                        "DIMENSIONVALUECODE": "dimensionValueCode",
                        "POSTINGVALIDATION": "postingValidation"
                    },
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'item_id':
                        (str,),
                    'top':
                        (int,),
                    'skip':
                        (int,),
                    'limit':
                        (int,),
                    'filter':
                        (str,),
                    'expand':
                        ([str],),
                    'select':
                        ([str],),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'item_id': 'item_id',
                    'top': '$top',
                    'skip': '$skip',
                    'limit': '$limit',
                    'filter': '$filter',
                    'expand': '$expand',
                    'select': '$select',
                },
                'location_map': {
                    'company_id': 'path',
                    'item_id': 'path',
                    'top': 'query',
                    'skip': 'query',
                    'limit': 'query',
                    'filter': 'query',
                    'expand': 'query',
                    'select': 'query',
                },
                'collection_format_map': {
                    'expand': 'csv',
                    'select': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__list_default_dimensions_for_item
        )

        def __list_default_dimensions_for_vendor(
            self,
            company_id,
            vendor_id,
            **kwargs
        ):
            """Returns a list of defaultDimensions  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.list_default_dimensions_for_vendor(company_id, vendor_id, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                vendor_id (str): (v1.0) id for vendor

            Keyword Args:
                top (int): (v1.0) Number of items to return from the top of the list. [optional]
                skip (int): (v1.0) Number of items to skip from the list. [optional]
                limit (int): (v1.0) Number of items to return from the list. [optional]
                filter (str): (v1.0) Filtering expression. [optional]
                expand ([str]): (v1.0) Entities to expand. [optional]
                select ([str]): (v1.0) Selected properties to be retrieved. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                InlineResponse2003
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['vendor_id'] = \
                vendor_id
            return self.call_with_http_info(**kwargs)

        self.list_default_dimensions_for_vendor = _Endpoint(
            settings={
                'response_type': (InlineResponse2003,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/vendors({vendor_id})/defaultDimensions',
                'operation_id': 'list_default_dimensions_for_vendor',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'vendor_id',
                    'top',
                    'skip',
                    'limit',
                    'filter',
                    'expand',
                    'select',
                ],
                'required': [
                    'company_id',
                    'vendor_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'expand',
                    'select',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('expand',): {

                        "ACCOUNT": "account",
                        "DIMENSION": "dimension",
                        "DIMENSIONVALUE": "dimensionValue"
                    },
                    ('select',): {

                        "PARENTID": "parentId",
                        "DIMENSIONID": "dimensionId",
                        "DIMENSIONCODE": "dimensionCode",
                        "DIMENSIONVALUEID": "dimensionValueId",
                        "DIMENSIONVALUECODE": "dimensionValueCode",
                        "POSTINGVALIDATION": "postingValidation"
                    },
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'vendor_id':
                        (str,),
                    'top':
                        (int,),
                    'skip':
                        (int,),
                    'limit':
                        (int,),
                    'filter':
                        (str,),
                    'expand':
                        ([str],),
                    'select':
                        ([str],),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'vendor_id': 'vendor_id',
                    'top': '$top',
                    'skip': '$skip',
                    'limit': '$limit',
                    'filter': '$filter',
                    'expand': '$expand',
                    'select': '$select',
                },
                'location_map': {
                    'company_id': 'path',
                    'vendor_id': 'path',
                    'top': 'query',
                    'skip': 'query',
                    'limit': 'query',
                    'filter': 'query',
                    'expand': 'query',
                    'select': 'query',
                },
                'collection_format_map': {
                    'expand': 'csv',
                    'select': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__list_default_dimensions_for_vendor
        )

        def __patch_default_dimensions(
            self,
            company_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            content_type,
            if_match,
            default_dimensions,
            **kwargs
        ):
            """Updates an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.patch_default_dimensions(company_id, default_dimensions_parent_id, default_dimensions_dimension_id, content_type, if_match, default_dimensions, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions
                content_type (str): (v1.0) application/json
                if_match (str): (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
                default_dimensions (DefaultDimensions):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            kwargs['content_type'] = \
                content_type
            kwargs['if_match'] = \
                if_match
            kwargs['default_dimensions'] = \
                default_dimensions
            return self.call_with_http_info(**kwargs)

        self.patch_default_dimensions = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'patch_default_dimensions',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'content_type',
                    'if_match',
                    'default_dimensions',
                ],
                'required': [
                    'company_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'content_type',
                    'if_match',
                    'default_dimensions',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                    'content_type':
                        (str,),
                    'if_match':
                        (str,),
                    'default_dimensions':
                        (DefaultDimensions,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                    'content_type': 'Content-Type',
                    'if_match': 'If-Match',
                },
                'location_map': {
                    'company_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                    'content_type': 'header',
                    'if_match': 'header',
                    'default_dimensions': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__patch_default_dimensions
        )

        def __patch_default_dimensions_for_customer(
            self,
            company_id,
            customer_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            content_type,
            if_match,
            default_dimensions,
            **kwargs
        ):
            """Updates an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.patch_default_dimensions_for_customer(company_id, customer_id, default_dimensions_parent_id, default_dimensions_dimension_id, content_type, if_match, default_dimensions, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                customer_id (str): (v1.0) id for customer
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions
                content_type (str): (v1.0) application/json
                if_match (str): (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
                default_dimensions (DefaultDimensions):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['customer_id'] = \
                customer_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            kwargs['content_type'] = \
                content_type
            kwargs['if_match'] = \
                if_match
            kwargs['default_dimensions'] = \
                default_dimensions
            return self.call_with_http_info(**kwargs)

        self.patch_default_dimensions_for_customer = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/customers({customer_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'patch_default_dimensions_for_customer',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'customer_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'content_type',
                    'if_match',
                    'default_dimensions',
                ],
                'required': [
                    'company_id',
                    'customer_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'content_type',
                    'if_match',
                    'default_dimensions',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'customer_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                    'content_type':
                        (str,),
                    'if_match':
                        (str,),
                    'default_dimensions':
                        (DefaultDimensions,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'customer_id': 'customer_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                    'content_type': 'Content-Type',
                    'if_match': 'If-Match',
                },
                'location_map': {
                    'company_id': 'path',
                    'customer_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                    'content_type': 'header',
                    'if_match': 'header',
                    'default_dimensions': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__patch_default_dimensions_for_customer
        )

        def __patch_default_dimensions_for_employee(
            self,
            company_id,
            employee_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            content_type,
            if_match,
            default_dimensions,
            **kwargs
        ):
            """Updates an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.patch_default_dimensions_for_employee(company_id, employee_id, default_dimensions_parent_id, default_dimensions_dimension_id, content_type, if_match, default_dimensions, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                employee_id (str): (v1.0) id for employee
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions
                content_type (str): (v1.0) application/json
                if_match (str): (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
                default_dimensions (DefaultDimensions):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['employee_id'] = \
                employee_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            kwargs['content_type'] = \
                content_type
            kwargs['if_match'] = \
                if_match
            kwargs['default_dimensions'] = \
                default_dimensions
            return self.call_with_http_info(**kwargs)

        self.patch_default_dimensions_for_employee = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/employees({employee_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'patch_default_dimensions_for_employee',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'employee_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'content_type',
                    'if_match',
                    'default_dimensions',
                ],
                'required': [
                    'company_id',
                    'employee_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'content_type',
                    'if_match',
                    'default_dimensions',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'employee_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                    'content_type':
                        (str,),
                    'if_match':
                        (str,),
                    'default_dimensions':
                        (DefaultDimensions,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'employee_id': 'employee_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                    'content_type': 'Content-Type',
                    'if_match': 'If-Match',
                },
                'location_map': {
                    'company_id': 'path',
                    'employee_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                    'content_type': 'header',
                    'if_match': 'header',
                    'default_dimensions': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__patch_default_dimensions_for_employee
        )

        def __patch_default_dimensions_for_item(
            self,
            company_id,
            item_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            content_type,
            if_match,
            default_dimensions,
            **kwargs
        ):
            """Updates an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.patch_default_dimensions_for_item(company_id, item_id, default_dimensions_parent_id, default_dimensions_dimension_id, content_type, if_match, default_dimensions, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                item_id (str): (v1.0) id for item
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions
                content_type (str): (v1.0) application/json
                if_match (str): (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
                default_dimensions (DefaultDimensions):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['item_id'] = \
                item_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            kwargs['content_type'] = \
                content_type
            kwargs['if_match'] = \
                if_match
            kwargs['default_dimensions'] = \
                default_dimensions
            return self.call_with_http_info(**kwargs)

        self.patch_default_dimensions_for_item = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/items({item_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'patch_default_dimensions_for_item',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'item_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'content_type',
                    'if_match',
                    'default_dimensions',
                ],
                'required': [
                    'company_id',
                    'item_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'content_type',
                    'if_match',
                    'default_dimensions',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'item_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                    'content_type':
                        (str,),
                    'if_match':
                        (str,),
                    'default_dimensions':
                        (DefaultDimensions,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'item_id': 'item_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                    'content_type': 'Content-Type',
                    'if_match': 'If-Match',
                },
                'location_map': {
                    'company_id': 'path',
                    'item_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                    'content_type': 'header',
                    'if_match': 'header',
                    'default_dimensions': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__patch_default_dimensions_for_item
        )

        def __patch_default_dimensions_for_vendor(
            self,
            company_id,
            vendor_id,
            default_dimensions_parent_id,
            default_dimensions_dimension_id,
            content_type,
            if_match,
            default_dimensions,
            **kwargs
        ):
            """Updates an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.patch_default_dimensions_for_vendor(company_id, vendor_id, default_dimensions_parent_id, default_dimensions_dimension_id, content_type, if_match, default_dimensions, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                vendor_id (str): (v1.0) id for vendor
                default_dimensions_parent_id (str): (v1.0) parentId for defaultDimensions
                default_dimensions_dimension_id (str): (v1.0) dimensionId for defaultDimensions
                content_type (str): (v1.0) application/json
                if_match (str): (v1.0) Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
                default_dimensions (DefaultDimensions):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['vendor_id'] = \
                vendor_id
            kwargs['default_dimensions_parent_id'] = \
                default_dimensions_parent_id
            kwargs['default_dimensions_dimension_id'] = \
                default_dimensions_dimension_id
            kwargs['content_type'] = \
                content_type
            kwargs['if_match'] = \
                if_match
            kwargs['default_dimensions'] = \
                default_dimensions
            return self.call_with_http_info(**kwargs)

        self.patch_default_dimensions_for_vendor = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/vendors({vendor_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})',
                'operation_id': 'patch_default_dimensions_for_vendor',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'vendor_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'content_type',
                    'if_match',
                    'default_dimensions',
                ],
                'required': [
                    'company_id',
                    'vendor_id',
                    'default_dimensions_parent_id',
                    'default_dimensions_dimension_id',
                    'content_type',
                    'if_match',
                    'default_dimensions',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'vendor_id':
                        (str,),
                    'default_dimensions_parent_id':
                        (str,),
                    'default_dimensions_dimension_id':
                        (str,),
                    'content_type':
                        (str,),
                    'if_match':
                        (str,),
                    'default_dimensions':
                        (DefaultDimensions,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'vendor_id': 'vendor_id',
                    'default_dimensions_parent_id': 'defaultDimensions_parentId',
                    'default_dimensions_dimension_id': 'defaultDimensions_dimensionId',
                    'content_type': 'Content-Type',
                    'if_match': 'If-Match',
                },
                'location_map': {
                    'company_id': 'path',
                    'vendor_id': 'path',
                    'default_dimensions_parent_id': 'path',
                    'default_dimensions_dimension_id': 'path',
                    'content_type': 'header',
                    'if_match': 'header',
                    'default_dimensions': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__patch_default_dimensions_for_vendor
        )

        def __post_default_dimensions(
            self,
            company_id,
            content_type,
            default_dimensions,
            **kwargs
        ):
            """Creates an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.post_default_dimensions(company_id, content_type, default_dimensions, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                content_type (str): (v1.0) application/json
                default_dimensions (DefaultDimensions):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['content_type'] = \
                content_type
            kwargs['default_dimensions'] = \
                default_dimensions
            return self.call_with_http_info(**kwargs)

        self.post_default_dimensions = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/defaultDimensions',
                'operation_id': 'post_default_dimensions',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'content_type',
                    'default_dimensions',
                ],
                'required': [
                    'company_id',
                    'content_type',
                    'default_dimensions',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'content_type':
                        (str,),
                    'default_dimensions':
                        (DefaultDimensions,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'content_type': 'Content-Type',
                },
                'location_map': {
                    'company_id': 'path',
                    'content_type': 'header',
                    'default_dimensions': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__post_default_dimensions
        )

        def __post_default_dimensions_for_customer(
            self,
            company_id,
            customer_id,
            content_type,
            default_dimensions,
            **kwargs
        ):
            """Creates an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.post_default_dimensions_for_customer(company_id, customer_id, content_type, default_dimensions, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                customer_id (str): (v1.0) id for customer
                content_type (str): (v1.0) application/json
                default_dimensions (DefaultDimensions):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['customer_id'] = \
                customer_id
            kwargs['content_type'] = \
                content_type
            kwargs['default_dimensions'] = \
                default_dimensions
            return self.call_with_http_info(**kwargs)

        self.post_default_dimensions_for_customer = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/customers({customer_id})/defaultDimensions',
                'operation_id': 'post_default_dimensions_for_customer',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'customer_id',
                    'content_type',
                    'default_dimensions',
                ],
                'required': [
                    'company_id',
                    'customer_id',
                    'content_type',
                    'default_dimensions',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'customer_id':
                        (str,),
                    'content_type':
                        (str,),
                    'default_dimensions':
                        (DefaultDimensions,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'customer_id': 'customer_id',
                    'content_type': 'Content-Type',
                },
                'location_map': {
                    'company_id': 'path',
                    'customer_id': 'path',
                    'content_type': 'header',
                    'default_dimensions': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__post_default_dimensions_for_customer
        )

        def __post_default_dimensions_for_employee(
            self,
            company_id,
            employee_id,
            content_type,
            default_dimensions,
            **kwargs
        ):
            """Creates an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.post_default_dimensions_for_employee(company_id, employee_id, content_type, default_dimensions, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                employee_id (str): (v1.0) id for employee
                content_type (str): (v1.0) application/json
                default_dimensions (DefaultDimensions):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['employee_id'] = \
                employee_id
            kwargs['content_type'] = \
                content_type
            kwargs['default_dimensions'] = \
                default_dimensions
            return self.call_with_http_info(**kwargs)

        self.post_default_dimensions_for_employee = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/employees({employee_id})/defaultDimensions',
                'operation_id': 'post_default_dimensions_for_employee',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'employee_id',
                    'content_type',
                    'default_dimensions',
                ],
                'required': [
                    'company_id',
                    'employee_id',
                    'content_type',
                    'default_dimensions',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'employee_id':
                        (str,),
                    'content_type':
                        (str,),
                    'default_dimensions':
                        (DefaultDimensions,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'employee_id': 'employee_id',
                    'content_type': 'Content-Type',
                },
                'location_map': {
                    'company_id': 'path',
                    'employee_id': 'path',
                    'content_type': 'header',
                    'default_dimensions': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__post_default_dimensions_for_employee
        )

        def __post_default_dimensions_for_item(
            self,
            company_id,
            item_id,
            content_type,
            default_dimensions,
            **kwargs
        ):
            """Creates an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.post_default_dimensions_for_item(company_id, item_id, content_type, default_dimensions, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                item_id (str): (v1.0) id for item
                content_type (str): (v1.0) application/json
                default_dimensions (DefaultDimensions):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['item_id'] = \
                item_id
            kwargs['content_type'] = \
                content_type
            kwargs['default_dimensions'] = \
                default_dimensions
            return self.call_with_http_info(**kwargs)

        self.post_default_dimensions_for_item = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/items({item_id})/defaultDimensions',
                'operation_id': 'post_default_dimensions_for_item',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'item_id',
                    'content_type',
                    'default_dimensions',
                ],
                'required': [
                    'company_id',
                    'item_id',
                    'content_type',
                    'default_dimensions',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'item_id':
                        (str,),
                    'content_type':
                        (str,),
                    'default_dimensions':
                        (DefaultDimensions,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'item_id': 'item_id',
                    'content_type': 'Content-Type',
                },
                'location_map': {
                    'company_id': 'path',
                    'item_id': 'path',
                    'content_type': 'header',
                    'default_dimensions': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__post_default_dimensions_for_item
        )

        def __post_default_dimensions_for_vendor(
            self,
            company_id,
            vendor_id,
            content_type,
            default_dimensions,
            **kwargs
        ):
            """Creates an object of type defaultDimensions in Dynamics 365 Business Central  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.post_default_dimensions_for_vendor(company_id, vendor_id, content_type, default_dimensions, async_req=True)
            >>> result = thread.get()

            Args:
                company_id (str): (v1.0) id for company
                vendor_id (str): (v1.0) id for vendor
                content_type (str): (v1.0) application/json
                default_dimensions (DefaultDimensions):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DefaultDimensions
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['company_id'] = \
                company_id
            kwargs['vendor_id'] = \
                vendor_id
            kwargs['content_type'] = \
                content_type
            kwargs['default_dimensions'] = \
                default_dimensions
            return self.call_with_http_info(**kwargs)

        self.post_default_dimensions_for_vendor = _Endpoint(
            settings={
                'response_type': (DefaultDimensions,),
                'auth': [
                    'oAuth'
                ],
                'endpoint_path': '/companies({company_id})/vendors({vendor_id})/defaultDimensions',
                'operation_id': 'post_default_dimensions_for_vendor',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'company_id',
                    'vendor_id',
                    'content_type',
                    'default_dimensions',
                ],
                'required': [
                    'company_id',
                    'vendor_id',
                    'content_type',
                    'default_dimensions',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'company_id':
                        (str,),
                    'vendor_id':
                        (str,),
                    'content_type':
                        (str,),
                    'default_dimensions':
                        (DefaultDimensions,),
                },
                'attribute_map': {
                    'company_id': 'company_id',
                    'vendor_id': 'vendor_id',
                    'content_type': 'Content-Type',
                },
                'location_map': {
                    'company_id': 'path',
                    'vendor_id': 'path',
                    'content_type': 'header',
                    'default_dimensions': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__post_default_dimensions_for_vendor
        )
