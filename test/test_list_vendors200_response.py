# coding: utf-8

"""
    (v2.0) Dynamics 365 Business Central

    (v2.0) Business Central Standard APIs

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pybusinesscentral.model.list_vendors200_response import ListVendors200Response

class TestListVendors200Response(unittest.TestCase):
    """ListVendors200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListVendors200Response:
        """Test ListVendors200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListVendors200Response`
        """
        model = ListVendors200Response()
        if include_optional:
            return ListVendors200Response(
                value = [
                    pybusinesscentral.model.vendor.vendor(
                        id = '', 
                        number = '', 
                        display_name = '', 
                        address_line1 = '', 
                        address_line2 = '', 
                        city = '', 
                        state = '', 
                        country = '', 
                        postal_code = '', 
                        phone_number = '', 
                        email = '', 
                        website = '', 
                        tax_registration_number = '', 
                        currency_id = '', 
                        currency_code = '', 
                        irs1099_code = '', 
                        payment_terms_id = '', 
                        payment_method_id = '', 
                        tax_liable = True, 
                        blocked = '', 
                        balance = 1.337, 
                        last_modified_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        picture = [
                            pybusinesscentral.model.picture.picture(
                                id = '', 
                                width = 56, 
                                height = 56, 
                                content_type = '', 
                                content@odata/media_edit_link = '', 
                                content@odata/media_read_link = '', )
                            ], 
                        default_dimensions = [
                            pybusinesscentral.model.default_dimensions.defaultDimensions(
                                parent_id = '', 
                                dimension_id = '', 
                                dimension_code = '', 
                                dimension_value_id = '', 
                                dimension_value_code = '', 
                                posting_validation = '', 
                                account = pybusinesscentral.model.account.account(
                                    id = '', 
                                    number = '', 
                                    display_name = '', 
                                    category = '', 
                                    sub_category = '', 
                                    blocked = True, 
                                    last_modified_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                                dimension = pybusinesscentral.model.dimension.dimension(
                                    id = '', 
                                    code = '', 
                                    display_name = '', 
                                    last_modified_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    dimension_values = [
                                        pybusinesscentral.model.dimension_value.dimensionValue(
                                            id = '', 
                                            code = '', 
                                            display_name = '', 
                                            last_modified_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                        ], ), 
                                dimension_value = pybusinesscentral.model.dimension_value.dimensionValue(
                                    id = '', 
                                    code = '', 
                                    display_name = '', 
                                    last_modified_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                            ], 
                        currency = pybusinesscentral.model.currency.currency(
                            id = '', 
                            code = '', 
                            display_name = '', 
                            symbol = '', 
                            amount_decimal_places = '', 
                            amount_rounding_precision = 1.337, 
                            last_modified_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        payment_term = pybusinesscentral.model.payment_term.paymentTerm(
                            id = '', 
                            code = '', 
                            display_name = '', 
                            due_date_calculation = '', 
                            discount_date_calculation = '', 
                            discount_percent = 1.337, 
                            calculate_discount_on_credit_memos = True, 
                            last_modified_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        payment_method = pybusinesscentral.model.payment_method.paymentMethod(
                            id = '', 
                            code = '', 
                            display_name = '', 
                            last_modified_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                    ]
            )
        else:
            return ListVendors200Response(
        )
        """

    def testListVendors200Response(self):
        """Test ListVendors200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
